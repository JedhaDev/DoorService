//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoorClient.DoorServiceGateway {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Door", Namespace="http://schemas.datacontract.org/2004/07/Repository.Entities")]
    [System.SerializableAttribute()]
    public partial class Door : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DoorServiceGateway.IDoorService", CallbackContract=typeof(DoorClient.DoorServiceGateway.IDoorServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IDoorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoorService/Login", ReplyAction="http://tempuri.org/IDoorService/LoginResponse")]
        void Login(string application);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoorService/Login", ReplyAction="http://tempuri.org/IDoorService/LoginResponse")]
        System.Threading.Tasks.Task LoginAsync(string application);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoorService/SetDoorStatus")]
        void SetDoorStatus(int door, bool status);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoorService/SetDoorStatus")]
        System.Threading.Tasks.Task SetDoorStatusAsync(int door, bool status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoorService/GetDoorsStatus", ReplyAction="http://tempuri.org/IDoorService/GetDoorsStatusResponse")]
        DoorClient.DoorServiceGateway.Door[] GetDoorsStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoorService/GetDoorsStatus", ReplyAction="http://tempuri.org/IDoorService/GetDoorsStatusResponse")]
        System.Threading.Tasks.Task<DoorClient.DoorServiceGateway.Door[]> GetDoorsStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoorService/Logout")]
        void Logout();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoorService/Logout")]
        System.Threading.Tasks.Task LogoutAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDoorServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoorService/NotifyLogin")]
        void NotifyLogin(string application);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoorService/NotifyDoorChanged")]
        void NotifyDoorChanged(string application, int door, bool status);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDoorService/NotifyLogout")]
        void NotifyLogout(string application);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDoorServiceChannel : DoorClient.DoorServiceGateway.IDoorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoorServiceClient : System.ServiceModel.DuplexClientBase<DoorClient.DoorServiceGateway.IDoorService>, DoorClient.DoorServiceGateway.IDoorService {
        
        public DoorServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DoorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DoorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DoorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DoorServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Login(string application) {
            base.Channel.Login(application);
        }
        
        public System.Threading.Tasks.Task LoginAsync(string application) {
            return base.Channel.LoginAsync(application);
        }
        
        public void SetDoorStatus(int door, bool status) {
            base.Channel.SetDoorStatus(door, status);
        }
        
        public System.Threading.Tasks.Task SetDoorStatusAsync(int door, bool status) {
            return base.Channel.SetDoorStatusAsync(door, status);
        }
        
        public DoorClient.DoorServiceGateway.Door[] GetDoorsStatus() {
            return base.Channel.GetDoorsStatus();
        }
        
        public System.Threading.Tasks.Task<DoorClient.DoorServiceGateway.Door[]> GetDoorsStatusAsync() {
            return base.Channel.GetDoorsStatusAsync();
        }
        
        public void Logout() {
            base.Channel.Logout();
        }
        
        public System.Threading.Tasks.Task LogoutAsync() {
            return base.Channel.LogoutAsync();
        }
    }
}
